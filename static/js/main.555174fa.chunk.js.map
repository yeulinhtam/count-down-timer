{"version":3,"sources":["logo.svg","features/CountDown/components/Clock/index.js","features/CountDown/pages/CountDownPage.js","features/CountDown/index.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","useState","time","setTime","useEffect","timeInterval","setInterval","distance","date","Date","countDownDate","getUTCFullYear","getTime","offset","getTimezoneOffset","days","Math","floor","slice","hours","minutes","seconds","formatDateTime","clearInterval","className","CountDownPage","CountDown","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,kBCwEAA,MAzCf,WAAkB,IAAD,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,KAcb,OAVAC,qBAAU,WACN,IAAMC,EAAeC,aAAY,WAC7B,IAAMC,EA7BlB,WACI,IAAMC,EAAO,IAAIC,KAEbC,EAAgB,IAAID,KAAKD,EAAKG,iBAAmB,EAAI,IAAIC,UACzDC,EAASL,EAAKM,oBAGdP,EAAWG,EAFLF,EAAKI,UASf,MAAO,CACHG,KALO,WAAIC,KAAKC,MAAMV,EAAQ,QAA4BW,OAAO,GAMjEC,MALQ,WAAIH,KAAKC,MAAOV,EAAQ,MAAT,MAAyDM,EAAO,IAAKK,OAAO,GAMnGE,QALU,WAAIJ,KAAKC,MAAOV,EAAQ,KAAT,MAA+CW,OAAO,GAM/EG,QALU,WAAIL,KAAKC,MAAOV,EAAQ,IAAkB,MAAQW,OAAO,IAgB9CI,GACjBnB,EAAQI,KACT,KACH,OAAO,WACHgB,cAAclB,MAEnB,IAGC,qBAAKmB,UAAU,YAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,cAAf,gCACA,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,OAAb,SAAqBtB,EAAKa,OAC1B,sBAAMS,UAAU,OAAhB,qBAEJ,sBAAKA,UAAU,mBAAf,UACI,mBAAGA,UAAU,OAAb,SAAqBtB,EAAKiB,QAC1B,sBAAMK,UAAU,OAAhB,sBAEJ,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,OAAb,SAAqBtB,EAAKkB,UAC1B,sBAAMI,UAAU,OAAhB,wBAEJ,sBAAKA,UAAU,qBAAf,UACI,mBAAGA,UAAU,YAAb,SAA0BtB,EAAKmB,UAC/B,sBAAMG,UAAU,OAAhB,iCCnDTC,MANf,WACI,OACI,cAAC,EAAD,KCIOC,MANf,WACI,OACI,cAAC,EAAD,KCGOC,MARf,WACE,OACE,qBAAKH,UAAU,MAAf,SACI,cAAC,EAAD,OCKOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.555174fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from 'react';\r\nimport './Clock.css';\r\n\r\nClock.propTypes = {\r\n\r\n};\r\n\r\n\r\nfunction formatDateTime() {\r\n    const date = new Date();\r\n\r\n    let countDownDate = new Date(date.getUTCFullYear() + 1 + \"\").getTime();\r\n    let offset = date.getTimezoneOffset();\r\n    let now = date.getTime();\r\n\r\n    var distance = countDownDate  - now;\r\n\r\n    // Time calculations for days, hours, minutes and seconds\r\n    var days = `0${Math.floor(distance / (1000 * 60 * 60 * 24))}`.slice(-2);\r\n    var hours = `0${Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + offset/60}`.slice(-2);\r\n    var minutes = `0${Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\r\n    var seconds = `0${Math.floor((distance % (1000 * 60)) / 1000)}`.slice(-2);\r\n    return {\r\n        days,\r\n        hours,\r\n        minutes,\r\n        seconds\r\n    }\r\n\r\n}\r\n\r\nfunction Clock() {\r\n\r\n    const [time, setTime] = useState({});\r\n\r\n    useEffect(() => {\r\n        const timeInterval = setInterval(() => {\r\n            const distance = formatDateTime();\r\n            setTime(distance);\r\n        }, 1000);\r\n        return () => {\r\n            clearInterval(timeInterval);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"clock-wrapper\">\r\n                <div className=\"clock-title\">New Year Countdown</div>\r\n                <div className=\"clock\">\r\n                    <div className=\"days block-time\">\r\n                        <p className=\"time\">{time.days}</p>\r\n                        <span className=\"text\">DAYS</span>\r\n                    </div>\r\n                    <div className=\"hours block-time\">\r\n                        <p className=\"time\">{time.hours}</p>\r\n                        <span className=\"text\">HOURS</span>\r\n                    </div>\r\n                    <div className=\"minutes block-time\">\r\n                        <p className=\"time\">{time.minutes}</p>\r\n                        <span className=\"text\">MINUTES</span>\r\n                    </div>\r\n                    <div className=\"seconds block-time\">\r\n                        <p className=\"time mark\">{time.seconds}</p>\r\n                        <span className=\"text\">SECONDS</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Clock;","import React from 'react';\r\nimport Clock from '../components/Clock';\r\n\r\nCountDownPage.propTypes = {\r\n    \r\n};\r\n\r\nfunction CountDownPage() {\r\n    return (\r\n        <Clock />\r\n    );\r\n}\r\n\r\nexport default CountDownPage;","import React from 'react';\r\nimport CountDownPage from './pages/CountDownPage';\r\n\r\nCountDown.propTypes = {\r\n    \r\n};\r\n\r\nfunction CountDown() {\r\n    return (\r\n        <CountDownPage />\r\n    );\r\n}\r\n\r\nexport default CountDown;","import logo from './logo.svg';\nimport './App.css';\nimport CountDown from './features/CountDown';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n        <CountDown />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}